{"version":3,"sources":["components/Filter.jsx","components/Persons.jsx","components/PersonForm.jsx","services/people.js","components/Notification.jsx","App.js","index.js"],"names":["Filter","newSearch","handleSearch","Fragment","value","onChange","Persons","persons","confirmRemove","personsToShow","filter","person","name","toLowerCase","includes","map","key","number","onClick","PersonForm","newName","handleNewPerson","newNumber","handleNewNumber","addNewPerson","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","App","useState","setNewName","setNewNumber","setSearch","setPersons","setMessage","useEffect","peopleService","initial","newMessage","text","setTimeout","event","target","e","preventDefault","newPerson","some","personId","find","window","confirm","returnedPerson","item","n","concat","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f022c70.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ newSearch, handleSearch }) => (\n  <React.Fragment>\n    <span>filter shown with </span>\n    <input value={newSearch} onChange={handleSearch} />\n  </React.Fragment>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Persons = ({ newSearch, persons, confirmRemove }) => {\n  const personsToShow =\n    newSearch === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(newSearch.toLowerCase())\n        );\n  return (\n    <React.Fragment>\n      <ul>\n        {personsToShow.map((person) => (\n          <li key={person.name}>\n            {person.name}: {person.number}{\" \"}\n            <button onClick={() => confirmRemove(person)}>delete</button>\n          </li>\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  handleNewPerson,\n  newNumber,\n  handleNewNumber,\n  addNewPerson,\n}) => (\n  <React.Fragment>\n    <h2>Add a new person</h2>\n    <form>\n      <div>\n        name: <input value={newName} onChange={handleNewPerson} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button onClick={addNewPerson} type='submit'>\n          add\n        </button>\n      </div>\n    </form>\n  </React.Fragment>\n);\n\nexport default PersonForm;\n","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst removePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, removePerson, update };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  return <div className='error'>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport peopleService from \"./services/people\";\nimport Notification from \"./components/Notification\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setSearch] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    peopleService.getAll().then((initial) => {\n      setPersons(initial);\n    });\n  }, []);\n\n  const handleNewPerson = (event) => setNewName(event.target.value);\n  const handleNewNumber = (event) => setNewNumber(event.target.value);\n  const handleSearch = (event) => setSearch(event.target.value);\n\n  const addNewPerson = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (persons.some((e) => e.name === newName)) {\n      const personId = persons.find((person) => person.name === newName);\n\n      if (window.confirm(`Update the number of ${newName}?`)) {\n        peopleService.update(personId.id, newPerson).then((returnedPerson) => {\n          setPersons(\n            persons.map((item) =>\n              item.name === newName ? returnedPerson : item\n            )\n          );\n        });\n        newMessage(`${newName}'s number was updated!`);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setPersons(persons.filter((n) => n.name !== newName));\n      } else {\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      peopleService\n        .create(newPerson)\n        .then(() => setPersons(persons.concat(newPerson)));\n      newMessage(`${newName} was added to the phonebook!`);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const newMessage = (text) => {\n    setMessage(text);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const confirmRemove = (person) => {\n    const { id } = person;\n    if (window.confirm(`Really remove ${person.name}?`)) {\n      peopleService\n        .removePerson(id)\n        .then((e) => {\n          setPersons(persons.filter((person) => id !== person.id));\n        })\n        .catch((error) =>\n          newMessage(`${person.name} was already removed from the server!`)\n        );\n    } else {\n      console.log(\"whatever\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter newSearch={newSearch} handleSearch={handleSearch} />\n      <PersonForm\n        newName={newName}\n        handleNewPerson={handleNewPerson}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n        addNewPerson={addNewPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        newSearch={newSearch}\n        confirmRemove={confirmRemove}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}